filter(teamName == act_id)
ngames <- nrow(adj_gxg)
if (ngames > 20) { weightmax <- 4 } else { weightmax <- 1 + ((ngames - 1) * .157894737)  }
weightmin <- 1
weightdist <- (weightmax - weightmin) / (ngames - 1)
if (ngames < 2) { weightdist <- 0 }
weightcurve <- matrix(0, nrow = ngames, ncol = 1)
c <- 1
i <- nrow(weightcurve)
for (c in c:i) {
weightcurve[c] <- weightmin + ((c - 1) * weightdist)
}
weight_sums <- sum(weightcurve)
weight_avg <- mean(weightcurve)
FG_wt <- (adj_gxg$FG * weightcurve) / weight_sums
SR2_wt <- (adj_gxg$SR2 * weightcurve) / weight_sums
FG3_wt <- (adj_gxg$FG3 * weightcurve) / weight_sums
SR3_wt <- (adj_gxg$SR3 * weightcurve) / weight_sums
FT_wt <- (adj_gxg$FT * weightcurve) / weight_sums
FTR_wt <- (adj_gxg$FTR * weightcurve) / weight_sums
ORB_wt <- (adj_gxg$ORB * weightcurve) / weight_sums
DRB_wt <- (adj_gxg$DRB * weightcurve) / weight_sums
TRB_wt <- (adj_gxg$TRB * weightcurve) / weight_sums
AST_wt <- (adj_gxg$AST * weightcurve) / weight_sums
TOV_wt <- (adj_gxg$TOV * weightcurve) / weight_sums
STL_wt <- (adj_gxg$STL * weightcurve) / weight_sums
BLK_wt <- (adj_gxg$BLK * weightcurve) / weight_sums
PF_wt <- (adj_gxg$PF * weightcurve) / weight_sums
eFG_wt <- (adj_gxg$eFG * weightcurve) / weight_sums
TS_wt <- (adj_gxg$TS * weightcurve) / weight_sums
Pace_wt <- (adj_gxg$Pace * weightcurve) / weight_sums
ORtg_wt <- (adj_gxg$ORtg * weightcurve) / weight_sums
DRtg_wt <- (adj_gxg$DRtg * weightcurve) / weight_sums
oFG_wt <- (adj_gxg$oFG * weightcurve) / weight_sums
oSR2_wt <- (adj_gxg$oSR2 * weightcurve) / weight_sums
oFG3_wt <- (adj_gxg$oFG3 * weightcurve) / weight_sums
oSR3_wt <- (adj_gxg$oSR3 * weightcurve) / weight_sums
oFT_wt <- (adj_gxg$oFT * weightcurve) / weight_sums
oFTR_wt <- (adj_gxg$oFTR * weightcurve) / weight_sums
oORB_wt <- (adj_gxg$oORB * weightcurve) / weight_sums
oDRB_wt <- (adj_gxg$oDRB * weightcurve) / weight_sums
oTRB_wt <- (adj_gxg$oTRB * weightcurve) / weight_sums
oAST_wt <- (adj_gxg$oAST * weightcurve) / weight_sums
oTOV_wt <- (adj_gxg$oTOV * weightcurve) / weight_sums
oSTL_wt <- (adj_gxg$oSTL * weightcurve) / weight_sums
oBLK_wt <- (adj_gxg$oBLK * weightcurve) / weight_sums
oPF_wt <- (adj_gxg$oPF * weightcurve) / weight_sums
oeFG_wt <- (adj_gxg$oeFG * weightcurve) / weight_sums
oTS_wt <- (adj_gxg$oTS * weightcurve) / weight_sums
FG_wt <- sum(FG_wt)
SR2_wt <- sum(SR2_wt)
FG3_wt <- sum(FG3_wt)
SR3_wt <- sum(SR3_wt)
FT_wt <- sum(FT_wt)
FTR_wt <- sum(FTR_wt)
ORB_wt <- sum(ORB_wt)
DRB_wt <- sum(DRB_wt)
TRB_wt <- sum(TRB_wt)
AST_wt <- sum(AST_wt)
TOV_wt <- sum(TOV_wt)
STL_wt <- sum(STL_wt)
BLK_wt <- sum(BLK_wt)
PF_wt <- sum(PF_wt)
eFG_wt <- sum(eFG_wt)
TS_wt <- sum(TS_wt)
Pace_wt <- sum(Pace_wt)
ORtg_wt <- sum(ORtg_wt)
DRtg_wt <- sum(DRtg_wt)
oFG_wt <- sum(oFG_wt)
oSR2_wt <- sum(oSR2_wt)
oFG3_wt <- sum(oFG3_wt)
oSR3_wt <- sum(oSR3_wt)
oFT_wt <- sum(oFT_wt)
oFTR_wt <- sum(oFTR_wt)
oORB_wt <- sum(oORB_wt)
oDRB_wt <- sum(oDRB_wt)
oTRB_wt <- sum(oTRB_wt)
oAST_wt <- sum(oAST_wt)
oTOV_wt <- sum(oTOV_wt)
oSTL_wt <- sum(oSTL_wt)
oBLK_wt <- sum(oBLK_wt)
oPF_wt <- sum(oPF_wt)
oeFG_wt <- sum(oeFG_wt)
oTS_wt <- sum(oTS_wt)
wt_df <- data.frame(act_id,FG_wt,SR2_wt,FG3_wt,SR3_wt,FT_wt,
FTR_wt,ORB_wt,DRB_wt,TRB_wt,AST_wt,TOV_wt,
STL_wt,BLK_wt,PF_wt,eFG_wt,TS_wt,oFG_wt,oSR2_wt,oFG3_wt,oSR3_wt,
oFT_wt,oFTR_wt,oORB_wt,oDRB_wt,oTRB_wt,oAST_wt,
oTOV_wt,oSTL_wt,oBLK_wt,oPF_wt,oeFG_wt,oTS_wt,
ORtg_wt,DRtg_wt,Pace_wt)
wt_holder_season <- bind_rows(wt_holder_season,wt_df)
}
season_final_wt <- wt_holder_season
colnames(season_final_wt) <- c("Team","FG","SR2","FG3","SR3","FT","FTR","ORB","DRB","TRB",
"AST","TOV","STL","BLK","PF","eFG","TS",
"oFG","oSR2","oFG3","oSR3","oFT","oFTR","oORB","oDRB","oTRB",
"oAST","oTOV","oSTL","oBLK","oPF","oeFG","oTS",
"ORtg","DRtg","Pace")
home_grouped <- home %>%
select(3,6:38) %>%
group_by(teamName,teamGameCount) %>%
summarise(across(c(teamPTS:opptPF), sum))
home_adv <- home_grouped
home_adv$Poss <- with(home_adv, teamFGA - teamORB + teamTOV + (.44 * teamFTA))
home_adv$oPoss <- with(home_adv, opptFGA - opptORB + opptTOV + (.44 * opptFTA))
home_adv$Pace <- with(home_adv, 48 * (Poss + oPoss) / (2 * (teamMin/5)))
home_adv$oPace <- with(home_adv, 48 * (Poss + oPoss) / (2 * (opptMin/5)))
home_adv$ORtg <- with(home_adv, (teamPTS / Poss) * 100)
home_adv$DRtg <- with(home_adv, (opptPTS / oPoss) * 100)
home_adv$FG <- with(home_adv, teamFGM / teamFGA)
home_adv$SR2 <- with(home_adv, (teamFGA - team3PA) / teamFGA)
home_adv$FG3 <- with(home_adv, team3PM / team3PA)
home_adv$SR3 <- with(home_adv, team3PA / teamFGA)
home_adv$FT <- with(home_adv, teamFTM / teamFTA)
home_adv$FTR <- with(home_adv, teamFTA / teamFGA)
home_adv$ORB <- with(home_adv, teamORB / (teamORB + opptDRB))
home_adv$DRB <- with(home_adv, teamDRB / (teamDRB + opptORB))
home_adv$TRB <- with(home_adv, teamTRB / (teamTRB + opptTRB))
home_adv$AST <- with(home_adv, teamAST / teamFGM)
home_adv$TOV <- with(home_adv, teamTOV / Poss)
home_adv$STL <- with(home_adv, teamSTL / oPoss)
home_adv$BLK <- with(home_adv, teamBLK / (opptFGA - oppt3PA))
home_adv$PF <- with(home_adv, teamPF / oPoss)
home_adv$eFG <- with(home_adv, (teamFGM + .5 * team3PM) / teamFGA)
home_adv$TS <- with(home_adv, teamPTS / (2 * teamFGA + .44 * teamFTA))
home_adv$oFG <- with(home_adv, opptFGM / opptFGA)
home_adv$oSR2 <- with(home_adv, (opptFGA - oppt3PA) / opptFGA)
home_adv$oFG3 <- with(home_adv, oppt3PM / oppt3PA)
home_adv$oSR3 <- with(home_adv, oppt3PA / opptFGA)
home_adv$oFT <- with(home_adv, opptFTM / opptFTA)
home_adv$oFTR <- with(home_adv, opptFTA / opptFGA)
home_adv$oORB <- with(home_adv, opptORB / (opptORB + teamDRB))
home_adv$oDRB <- with(home_adv, opptDRB / (opptDRB + teamORB))
home_adv$oTRB <- with(home_adv, opptTRB / (teamTRB + opptTRB))
home_adv$oAST <- with(home_adv, opptAST / opptFGM)
home_adv$oTOV <- with(home_adv, opptTOV / oPoss)
home_adv$oSTL <- with(home_adv, opptSTL / Poss)
home_adv$oBLK <- with(home_adv, opptBLK / (teamFGA - team3PA))
home_adv$oPF <- with(home_adv, opptPF / Poss)
home_adv$oeFG <- with(home_adv, (opptFGM + .5 * oppt3PM) / opptFGA)
home_adv$oTS <- with(home_adv, opptPTS / (2 * opptFGA + .44 * opptFTA))
home_final <- home_adv %>%
select(1,41:72,39,40,37)
wt_holder_home <- data.frame()
a <- 1
g <- nrow(home_final)
for (a in a:g) {
act_id <- as.character(home_final[a,1])
adj_gxg <- home_final %>%
filter(teamName == act_id)
ngames <- nrow(adj_gxg)
if (ngames > 20) { weightmax <- 4 } else { weightmax <- 1 + ((ngames - 1) * .157894737)  }
weightmin <- 1
weightdist <- (weightmax - weightmin) / (ngames - 1)
if (ngames < 2) { weightdist <- 0 }
weightcurve <- matrix(0, nrow = ngames, ncol = 1)
c <- 1
i <- nrow(weightcurve)
for (c in c:i) {
weightcurve[c] <- weightmin + ((c - 1) * weightdist)
}
weight_sums <- sum(weightcurve)
weight_avg <- mean(weightcurve)
FG_wt <- (adj_gxg$FG * weightcurve) / weight_sums
SR2_wt <- (adj_gxg$SR2 * weightcurve) / weight_sums
FG3_wt <- (adj_gxg$FG3 * weightcurve) / weight_sums
SR3_wt <- (adj_gxg$SR3 * weightcurve) / weight_sums
FT_wt <- (adj_gxg$FT * weightcurve) / weight_sums
FTR_wt <- (adj_gxg$FTR * weightcurve) / weight_sums
ORB_wt <- (adj_gxg$ORB * weightcurve) / weight_sums
DRB_wt <- (adj_gxg$DRB * weightcurve) / weight_sums
TRB_wt <- (adj_gxg$TRB * weightcurve) / weight_sums
AST_wt <- (adj_gxg$AST * weightcurve) / weight_sums
TOV_wt <- (adj_gxg$TOV * weightcurve) / weight_sums
STL_wt <- (adj_gxg$STL * weightcurve) / weight_sums
BLK_wt <- (adj_gxg$BLK * weightcurve) / weight_sums
PF_wt <- (adj_gxg$PF * weightcurve) / weight_sums
eFG_wt <- (adj_gxg$eFG * weightcurve) / weight_sums
TS_wt <- (adj_gxg$TS * weightcurve) / weight_sums
Pace_wt <- (adj_gxg$Pace * weightcurve) / weight_sums
ORtg_wt <- (adj_gxg$ORtg * weightcurve) / weight_sums
DRtg_wt <- (adj_gxg$DRtg * weightcurve) / weight_sums
oFG_wt <- (adj_gxg$oFG * weightcurve) / weight_sums
oSR2_wt <- (adj_gxg$oSR2 * weightcurve) / weight_sums
oFG3_wt <- (adj_gxg$oFG3 * weightcurve) / weight_sums
oSR3_wt <- (adj_gxg$oSR3 * weightcurve) / weight_sums
oFT_wt <- (adj_gxg$oFT * weightcurve) / weight_sums
oFTR_wt <- (adj_gxg$oFTR * weightcurve) / weight_sums
oORB_wt <- (adj_gxg$oORB * weightcurve) / weight_sums
oDRB_wt <- (adj_gxg$oDRB * weightcurve) / weight_sums
oTRB_wt <- (adj_gxg$oTRB * weightcurve) / weight_sums
oAST_wt <- (adj_gxg$oAST * weightcurve) / weight_sums
oTOV_wt <- (adj_gxg$oTOV * weightcurve) / weight_sums
oSTL_wt <- (adj_gxg$oSTL * weightcurve) / weight_sums
oBLK_wt <- (adj_gxg$oBLK * weightcurve) / weight_sums
oPF_wt <- (adj_gxg$oPF * weightcurve) / weight_sums
oeFG_wt <- (adj_gxg$oeFG * weightcurve) / weight_sums
oTS_wt <- (adj_gxg$oTS * weightcurve) / weight_sums
FG_wt <- sum(FG_wt)
SR2_wt <- sum(SR2_wt)
FG3_wt <- sum(FG3_wt)
SR3_wt <- sum(SR3_wt)
FT_wt <- sum(FT_wt)
FTR_wt <- sum(FTR_wt)
ORB_wt <- sum(ORB_wt)
DRB_wt <- sum(DRB_wt)
TRB_wt <- sum(TRB_wt)
AST_wt <- sum(AST_wt)
TOV_wt <- sum(TOV_wt)
STL_wt <- sum(STL_wt)
BLK_wt <- sum(BLK_wt)
PF_wt <- sum(PF_wt)
eFG_wt <- sum(eFG_wt)
TS_wt <- sum(TS_wt)
Pace_wt <- sum(Pace_wt)
ORtg_wt <- sum(ORtg_wt)
DRtg_wt <- sum(DRtg_wt)
oFG_wt <- sum(oFG_wt)
oSR2_wt <- sum(oSR2_wt)
oFG3_wt <- sum(oFG3_wt)
oSR3_wt <- sum(oSR3_wt)
oFT_wt <- sum(oFT_wt)
oFTR_wt <- sum(oFTR_wt)
oORB_wt <- sum(oORB_wt)
oDRB_wt <- sum(oDRB_wt)
oTRB_wt <- sum(oTRB_wt)
oAST_wt <- sum(oAST_wt)
oTOV_wt <- sum(oTOV_wt)
oSTL_wt <- sum(oSTL_wt)
oBLK_wt <- sum(oBLK_wt)
oPF_wt <- sum(oPF_wt)
oeFG_wt <- sum(oeFG_wt)
oTS_wt <- sum(oTS_wt)
wt_df <- data.frame(act_id,FG_wt,SR2_wt,FG3_wt,SR3_wt,FT_wt,
FTR_wt,ORB_wt,DRB_wt,TRB_wt,AST_wt,TOV_wt,
STL_wt,BLK_wt,PF_wt,eFG_wt,TS_wt,oFG_wt,oSR2_wt,oFG3_wt,oSR3_wt,
oFT_wt,oFTR_wt,oORB_wt,oDRB_wt,oTRB_wt,oAST_wt,
oTOV_wt,oSTL_wt,oBLK_wt,oPF_wt,oeFG_wt,oTS_wt,
ORtg_wt,DRtg_wt,Pace_wt)
wt_holder_home <- bind_rows(wt_holder_home,wt_df)
}
home_final_wt <- wt_holder_home
colnames(home_final_wt) <- c("Team","FG","SR2","FG3","SR3","FT","FTR","ORB","DRB","TRB",
"AST","TOV","STL","BLK","PF","eFG","TS",
"oFG","oSR2","oFG3","oSR3","oFT","oFTR","oORB","oDRB","oTRB",
"oAST","oTOV","oSTL","oBLK","oPF","oeFG","oTS",
"ORtg","DRtg","Pace")
away_grouped <- away %>%
select(3,6:38) %>%
group_by(teamName,teamGameCount) %>%
summarise(across(c(teamPTS:opptPF), sum))
away_adv <- away_grouped
away_adv$Poss <- with(away_adv, teamFGA - teamORB + teamTOV + (.44 * teamFTA))
away_adv$oPoss <- with(away_adv, opptFGA - opptORB + opptTOV + (.44 * opptFTA))
away_adv$Pace <- with(away_adv, 48 * (Poss + oPoss) / (2 * (teamMin/5)))
away_adv$oPace <- with(away_adv, 48 * (Poss + oPoss) / (2 * (opptMin/5)))
away_adv$ORtg <- with(away_adv, (teamPTS / Poss) * 100)
away_adv$DRtg <- with(away_adv, (opptPTS / oPoss) * 100)
away_adv$FG <- with(away_adv, teamFGM / teamFGA)
away_adv$SR2 <- with(away_adv, (teamFGA - team3PA) / teamFGA)
away_adv$FG3 <- with(away_adv, team3PM / team3PA)
away_adv$SR3 <- with(away_adv, team3PA / teamFGA)
away_adv$FT <- with(away_adv, teamFTM / teamFTA)
away_adv$FTR <- with(away_adv, teamFTA / teamFGA)
away_adv$ORB <- with(away_adv, teamORB / (teamORB + opptDRB))
away_adv$DRB <- with(away_adv, teamDRB / (teamDRB + opptORB))
away_adv$TRB <- with(away_adv, teamTRB / (teamTRB + opptTRB))
away_adv$AST <- with(away_adv, teamAST / teamFGM)
away_adv$TOV <- with(away_adv, teamTOV / Poss)
away_adv$STL <- with(away_adv, teamSTL / oPoss)
away_adv$BLK <- with(away_adv, teamBLK / (opptFGA - oppt3PA))
away_adv$PF <- with(away_adv, teamPF / oPoss)
away_adv$eFG <- with(away_adv, (teamFGM + .5 * team3PM) / teamFGA)
away_adv$TS <- with(away_adv, teamPTS / (2 * teamFGA + .44 * teamFTA))
away_adv$oFG <- with(away_adv, opptFGM / opptFGA)
away_adv$oSR2 <- with(away_adv, (opptFGA - oppt3PA) / opptFGA)
away_adv$oFG3 <- with(away_adv, oppt3PM / oppt3PA)
away_adv$oSR3 <- with(away_adv, oppt3PA / opptFGA)
away_adv$oFT <- with(away_adv, opptFTM / opptFTA)
away_adv$oFTR <- with(away_adv, opptFTA / opptFGA)
away_adv$oORB <- with(away_adv, opptORB / (opptORB + teamDRB))
away_adv$oDRB <- with(away_adv, opptDRB / (opptDRB + teamORB))
away_adv$oTRB <- with(away_adv, opptTRB / (teamTRB + opptTRB))
away_adv$oAST <- with(away_adv, opptAST / opptFGM)
away_adv$oTOV <- with(away_adv, opptTOV / oPoss)
away_adv$oSTL <- with(away_adv, opptSTL / Poss)
away_adv$oBLK <- with(away_adv, opptBLK / (teamFGA - team3PA))
away_adv$oPF <- with(away_adv, opptPF / Poss)
away_adv$oeFG <- with(away_adv, (opptFGM + .5 * oppt3PM) / opptFGA)
away_adv$oTS <- with(away_adv, opptPTS / (2 * opptFGA + .44 * opptFTA))
away_final <- away_adv %>%
select(1,41:72,39,40,37)
wt_holder_away <- data.frame()
a <- 1
g <- nrow(away_final)
for (a in a:g) {
act_id <- as.character(away_final[a,1])
adj_gxg <- away_final %>%
filter(teamName == act_id)
ngames <- nrow(adj_gxg)
if (ngames > 20) { weightmax <- 4 } else { weightmax <- 1 + ((ngames - 1) * .157894737)  }
weightmin <- 1
weightdist <- (weightmax - weightmin) / (ngames - 1)
if (ngames < 2) { weightdist <- 0 }
weightcurve <- matrix(0, nrow = ngames, ncol = 1)
c <- 1
i <- nrow(weightcurve)
for (c in c:i) {
weightcurve[c] <- weightmin + ((c - 1) * weightdist)
}
weight_sums <- sum(weightcurve)
weight_avg <- mean(weightcurve)
FG_wt <- (adj_gxg$FG * weightcurve) / weight_sums
SR2_wt <- (adj_gxg$SR2 * weightcurve) / weight_sums
FG3_wt <- (adj_gxg$FG3 * weightcurve) / weight_sums
SR3_wt <- (adj_gxg$SR3 * weightcurve) / weight_sums
FT_wt <- (adj_gxg$FT * weightcurve) / weight_sums
FTR_wt <- (adj_gxg$FTR * weightcurve) / weight_sums
ORB_wt <- (adj_gxg$ORB * weightcurve) / weight_sums
DRB_wt <- (adj_gxg$DRB * weightcurve) / weight_sums
TRB_wt <- (adj_gxg$TRB * weightcurve) / weight_sums
AST_wt <- (adj_gxg$AST * weightcurve) / weight_sums
TOV_wt <- (adj_gxg$TOV * weightcurve) / weight_sums
STL_wt <- (adj_gxg$STL * weightcurve) / weight_sums
BLK_wt <- (adj_gxg$BLK * weightcurve) / weight_sums
PF_wt <- (adj_gxg$PF * weightcurve) / weight_sums
eFG_wt <- (adj_gxg$eFG * weightcurve) / weight_sums
TS_wt <- (adj_gxg$TS * weightcurve) / weight_sums
Pace_wt <- (adj_gxg$Pace * weightcurve) / weight_sums
ORtg_wt <- (adj_gxg$ORtg * weightcurve) / weight_sums
DRtg_wt <- (adj_gxg$DRtg * weightcurve) / weight_sums
oFG_wt <- (adj_gxg$oFG * weightcurve) / weight_sums
oSR2_wt <- (adj_gxg$oSR2 * weightcurve) / weight_sums
oFG3_wt <- (adj_gxg$oFG3 * weightcurve) / weight_sums
oSR3_wt <- (adj_gxg$oSR3 * weightcurve) / weight_sums
oFT_wt <- (adj_gxg$oFT * weightcurve) / weight_sums
oFTR_wt <- (adj_gxg$oFTR * weightcurve) / weight_sums
oORB_wt <- (adj_gxg$oORB * weightcurve) / weight_sums
oDRB_wt <- (adj_gxg$oDRB * weightcurve) / weight_sums
oTRB_wt <- (adj_gxg$oTRB * weightcurve) / weight_sums
oAST_wt <- (adj_gxg$oAST * weightcurve) / weight_sums
oTOV_wt <- (adj_gxg$oTOV * weightcurve) / weight_sums
oSTL_wt <- (adj_gxg$oSTL * weightcurve) / weight_sums
oBLK_wt <- (adj_gxg$oBLK * weightcurve) / weight_sums
oPF_wt <- (adj_gxg$oPF * weightcurve) / weight_sums
oeFG_wt <- (adj_gxg$oeFG * weightcurve) / weight_sums
oTS_wt <- (adj_gxg$oTS * weightcurve) / weight_sums
FG_wt <- sum(FG_wt)
SR2_wt <- sum(SR2_wt)
FG3_wt <- sum(FG3_wt)
SR3_wt <- sum(SR3_wt)
FT_wt <- sum(FT_wt)
FTR_wt <- sum(FTR_wt)
ORB_wt <- sum(ORB_wt)
DRB_wt <- sum(DRB_wt)
TRB_wt <- sum(TRB_wt)
AST_wt <- sum(AST_wt)
TOV_wt <- sum(TOV_wt)
STL_wt <- sum(STL_wt)
BLK_wt <- sum(BLK_wt)
PF_wt <- sum(PF_wt)
eFG_wt <- sum(eFG_wt)
TS_wt <- sum(TS_wt)
Pace_wt <- sum(Pace_wt)
ORtg_wt <- sum(ORtg_wt)
DRtg_wt <- sum(DRtg_wt)
oFG_wt <- sum(oFG_wt)
oSR2_wt <- sum(oSR2_wt)
oFG3_wt <- sum(oFG3_wt)
oSR3_wt <- sum(oSR3_wt)
oFT_wt <- sum(oFT_wt)
oFTR_wt <- sum(oFTR_wt)
oORB_wt <- sum(oORB_wt)
oDRB_wt <- sum(oDRB_wt)
oTRB_wt <- sum(oTRB_wt)
oAST_wt <- sum(oAST_wt)
oTOV_wt <- sum(oTOV_wt)
oSTL_wt <- sum(oSTL_wt)
oBLK_wt <- sum(oBLK_wt)
oPF_wt <- sum(oPF_wt)
oeFG_wt <- sum(oeFG_wt)
oTS_wt <- sum(oTS_wt)
wt_df <- data.frame(act_id,FG_wt,SR2_wt,FG3_wt,SR3_wt,FT_wt,
FTR_wt,ORB_wt,DRB_wt,TRB_wt,AST_wt,TOV_wt,
STL_wt,BLK_wt,PF_wt,eFG_wt,TS_wt,oFG_wt,oSR2_wt,oFG3_wt,oSR3_wt,
oFT_wt,oFTR_wt,oORB_wt,oDRB_wt,oTRB_wt,oAST_wt,
oTOV_wt,oSTL_wt,oBLK_wt,oPF_wt,oeFG_wt,oTS_wt,
ORtg_wt,DRtg_wt,Pace_wt)
wt_holder_away <- bind_rows(wt_holder_away,wt_df)
}
away_final_wt <- wt_holder_away
colnames(away_final_wt) <- c("Team","FG","SR2","FG3","SR3","FT","FTR","ORB","DRB","TRB",
"AST","TOV","STL","BLK","PF","eFG","TS",
"oFG","oSR2","oFG3","oSR3","oFT","oFTR","oORB","oDRB","oTRB",
"oAST","oTOV","oSTL","oBLK","oPF","oeFG","oTS",
"ORtg","DRtg","Pace")
scores <- game_range %>%
select(13,8,62,17,90,45)
colnames(scores) <- c("Date", "Loc", "Away", "Home", "AS", "HS")
scores <- scores %>%
filter(Loc == "H" & Date == gm_day_gxg)
scores <- game_range %>%
select(13,8,62,17,90,45)
colnames(scores) <- c("Date", "Loc", "Away", "Home", "AS", "HS")
scores <- scores %>%
filter(Loc == "H" & Date == gm_day_gxg)
View(season_final_wt)
scores <- scores %>%
filter(Loc == "H" & Date == gm_day_gxg)
scores <- left_join(scores, away_final_wt, by = c("Team" = "Team")) %>%
left_join(., home_final_wt, by = c("Team" = "Team"))
scores <- left_join(scores, season_final_wt, by = c("Team" = "Team")) %>%
left_join(., season_final_wt, by = c("Team" = "Team"))
scores <- left_join(scores, season_final_wt, by = c("Team" = "Team")) %>%
left_join(., season_final_wt, by = c("Team" = "Team"))
View(season_final_wt)
View(scores)
scores <- left_join(scores, season_final_wt, by = c("Away" = "Team")) %>%
left_join(., season_final_wt, by = c("Home" = "Team"))
View(season_final_wt)
source("~/.active-rstudio-document", echo=TRUE)
#### 2022 Model Training ####
library(tidyverse)
library(caTools)
library(readxl)
library(tidymodels)
library(broom)
library(ggfortify)
library(glmnet)
library(caret)
library(InformationValue)
library(class)
library(e1071)
rm(list=ls())
nba <- read_xlsx("/Users/Jesse/Documents/MyStuff/NBA Betting/NBAdb/NBAdb1722_oneadj_szn.xlsx")
## no correlation - eFG
nba_reg <- nba %>%
select(7,
14,15,16,18,19,21,23,30,34,35,37,39,43,
49,50,51,53,54,56,58,65,69,70,72,74,78)
## no correlation - ts
nba_reg <- nba %>%
select(7,
14,15,16,18,19,21,24,30,34,35,37,40,43,
49,50,51,53,54,56,59,65,69,70,72,75,78)
## no correlation - eFG
nba_reg <- nba %>%
select(7,
14,15,16,18,19,21,23,30,34,35,37,39,43,
49,50,51,53,54,56,58,65,69,70,72,74,78)
set.seed(214)
sample <- sample.split(nba_reg$Margin, SplitRatio = .70)
train <- nba_reg %>% filter(sample == TRUE)
test <- nba_reg %>% filter(sample == FALSE)
pre_proc_val <- preProcess(train[,-1], method = c("center", "scale"))
train[,-1] = predict(pre_proc_val, train[,-1])
test[,-1] = predict(pre_proc_val, test[,-1])
summary(train)
lin_mod <- lm(Margin ~., data = train)
summary(lin_mod)
#Step 1 - create the evaluation metrics function
eval_metrics <- function(model, df, predictions, target) {
resids = df[,target] - predictions
resids2 = resids**2
N = length(predictions)
r2 = as.character(round(summary(model)$r.squared, 4))
adj_r2 = as.character(round(summary(model)$adj.r.squared, 4))
print(adj_r2) #Adjusted R-squared
print(as.character(round(sqrt(sum(resids2)/N), 4))) #RMSE
}
# Step 2 - predicting and evaluating the model on train data
predictions = predict(lin_mod, newdata = train)
eval_metrics(lin_mod, train, predictions, target = 'Margin')
# Step 3 - predicting and evaluating the model on test data
predictions = predict(lin_mod, newdata = test)
eval_metrics(lin_mod, test, predictions, target = 'Margin')
nba <- nba %>%
filter(Date > '2018-08-01')
nba <- read_xlsx("/Users/Jesse/Documents/MyStuff/NBA Betting/NBAdb/NBAdb1722_oneadj_szn.xlsx")
nba <- nba %>%
filter(Date > '2018-08-01')
## no correlation - eFG
nba_reg <- nba %>%
select(7,
14,15,16,18,19,21,23,30,34,35,37,39,43,
49,50,51,53,54,56,58,65,69,70,72,74,78)
set.seed(214)
sample <- sample.split(nba_reg$Margin, SplitRatio = .70)
train <- nba_reg %>% filter(sample == TRUE)
test <- nba_reg %>% filter(sample == FALSE)
pre_proc_val <- preProcess(train[,-1], method = c("center", "scale"))
train[,-1] = predict(pre_proc_val, train[,-1])
test[,-1] = predict(pre_proc_val, test[,-1])
summary(train)
lin_mod <- lm(Margin ~., data = train)
summary(lin_mod)
#Step 1 - create the evaluation metrics function
eval_metrics <- function(model, df, predictions, target) {
resids = df[,target] - predictions
resids2 = resids**2
N = length(predictions)
r2 = as.character(round(summary(model)$r.squared, 4))
adj_r2 = as.character(round(summary(model)$adj.r.squared, 4))
print(adj_r2) #Adjusted R-squared
print(as.character(round(sqrt(sum(resids2)/N), 4))) #RMSE
}
# Step 2 - predicting and evaluating the model on train data
predictions = predict(lin_mod, newdata = train)
eval_metrics(lin_mod, train, predictions, target = 'Margin')
# Step 3 - predicting and evaluating the model on test data
predictions = predict(lin_mod, newdata = test)
eval_metrics(lin_mod, test, predictions, target = 'Margin')
