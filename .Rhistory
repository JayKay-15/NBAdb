mutate(across(c(MP:BPM), na_if, "Did Not Play")) %>%
mutate(game_id = current_id) %>%
mutate(loc = "H") %>%
left_join(game_df[c(1,2,6)], by = "game_id") %>%
rename("team" = "home_team_name") %>%
rename("player" = "Starters")
h_box[h_box == ""] <- "0"
full_box <- rbind(a_box, h_box)
full_box <- full_box %>%
select(18,20,19,21,1,2:17)
full_box[, 7:ncol(full_box)] <- lapply(7:ncol(full_box), function(x) as.numeric(full_box[[x]]))
master_df <- rbind(master_df,full_box)
}
inputfile <- "/Users/Jesse/Documents/MyStuff/NBA Betting/NBAdb/NBA_2023_game_data.rds"
outputfile <- "/Users/Jesse/Documents/MyStuff/NBA Betting/NBAdb/NBA_2023_advanced_box_scores.rds"
adv_df <- as_tibble(readRDS(outputfile))
game_df <- as_tibble(readRDS(inputfile))
game_df <- game_df %>% filter(date_game < Sys.Date()) %>% select(-arena_name)
game_df <- subset(game_df, !(game_df$game_id %in% adv_df$game_id))
master_df <- data.frame()
View(game_df)
View(adv_df)
View(adv_df)
url = "https://stats.nba.com/stats/leaguegamelog?Counter=1000&Season=2019-20&Direction=DESC&LeagueID=00&PlayerOrTeam=P&SeasonType=Regular%20Season&Sorter=DATE"
headers = c(
`Connection` = 'close',
`Accept` = 'application/json, text/plain, */*',
`x-nba-stats-token` = 'true',
`User-Agent` = 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36',
`x-nba-stats-origin` = 'stats',
`Sec-Fetch-Site` = 'same-origin',
`Sec-Fetch-Mode` = 'cors',
`Referer` = 'https://downwiththechinazis.com',
`Accept-Encoding` = 'gzip, deflate, br',
`Accept-Language` = 'en-US,en;q=0.9'
)
res <-
httr::GET(url,
httr::add_headers(.headers = headers))
json <-
res$content %>%
rawToChar() %>%
jsonlite::fromJSON(simplifyVector = T)
library(tidyverse)
library(data.table)
library(magrittr)
library(lubridate)
url = "https://stats.nba.com/stats/leaguegamelog?Counter=1000&Season=2019-20&Direction=DESC&LeagueID=00&PlayerOrTeam=P&SeasonType=Regular%20Season&Sorter=DATE"
headers = c(
`Connection` = 'close',
`Accept` = 'application/json, text/plain, */*',
`x-nba-stats-token` = 'true',
`User-Agent` = 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36',
`x-nba-stats-origin` = 'stats',
`Sec-Fetch-Site` = 'same-origin',
`Sec-Fetch-Mode` = 'cors',
`Referer` = 'https://downwiththechinazis.com',
`Accept-Encoding` = 'gzip, deflate, br',
`Accept-Language` = 'en-US,en;q=0.9'
)
res <-
httr::GET(url,
httr::add_headers(.headers = headers))
json <-
res$content %>%
rawToChar() %>%
jsonlite::fromJSON(simplifyVector = T)
View(json)
res <-
httr::GET(url,
httr::add_headers(.headers = headers))
data <- httr::content(res) %>% .[['resultSets']] %>% .[[1]]
column_names <- data$headers %>% as.character()
dt <- rbindlist(data$rowSet) %>% setnames(column_names)
View(dt)
library(tidyverse)
library(lubridate)
library(rvest)
inputfile <- "/Users/Jesse/Documents/MyStuff/NBA Betting/NBAdb/NBA_2023_game_data.rds"
outputfile <- "/Users/Jesse/Documents/MyStuff/NBA Betting/NBAdb/NBA_2023_advanced_box_scores.rds"
adv_df <- as_tibble(readRDS(outputfile))
game_df <- as_tibble(readRDS(inputfile))
game_df <- game_df %>% filter(date_game < Sys.Date()) %>% select(-arena_name)
game_df <- subset(game_df, !(game_df$game_id %in% adv_df$game_id))
master_df <- data.frame()
for (current_id in game_df$game_id) {
print(current_id)
##########
# get box scores
##########
url <- paste0("https://www.basketball-reference.com/boxscores/", current_id,
".html")
webpage <- read_html(url)
tables <- webpage %>% html_nodes("table") %>%
html_table()
tables <- discard(tables, function(z) ncol(z) != 17)
names(tables) <- c("visitor_adv_boxscore","home_adv_boxscore")
a_box <- tables[[1]]
names(a_box) <- as.character(a_box[1,])
a_box <- a_box[-1,]
a_box <- a_box %>%
filter(Starters != 'Reserves' & Starters != 'Team Totals') %>%
mutate(across(c(MP:BPM), na_if, "Did Not Play")) %>%
mutate(game_id = current_id)  %>%
mutate(loc = "A") %>%
left_join(game_df[c(1,2,4)], by = "game_id") %>%
rename("team" = "visitor_team_name") %>%
rename("player" = "Starters")
a_box[a_box == ""] <- "0"
h_box <- tables[[2]]
names(h_box) <- as.character(h_box[1,])
h_box <- h_box[-1,]
h_box <- h_box %>%
filter(Starters != 'Reserves' & Starters != 'Team Totals') %>%
mutate(across(c(MP:BPM), na_if, "Did Not Play")) %>%
mutate(game_id = current_id) %>%
mutate(loc = "H") %>%
left_join(game_df[c(1,2,6)], by = "game_id") %>%
rename("team" = "home_team_name") %>%
rename("player" = "Starters")
h_box[h_box == ""] <- "0"
full_box <- rbind(a_box, h_box)
full_box <- full_box %>%
select(18,20,19,21,1,2:17)
full_box[, 7:ncol(full_box)] <- lapply(7:ncol(full_box), function(x) as.numeric(full_box[[x]]))
master_df <- rbind(master_df,full_box)
}
master_df <- data.frame()
for (current_id in game_df$game_id) {
print(current_id)
##########
# get box scores
##########
url <- paste0("https://www.basketball-reference.com/boxscores/", current_id,
".html")
webpage <- read_html(url)
tables <- webpage %>% html_nodes("table") %>%
html_table()
tables <- discard(tables, function(z) ncol(z) != 17)
names(tables) <- c("visitor_adv_boxscore","home_adv_boxscore")
a_box <- tables[[1]]
names(a_box) <- as.character(a_box[1,])
a_box <- a_box[-1,]
a_box <- a_box %>%
filter(Starters != 'Reserves' & Starters != 'Team Totals') %>%
mutate(across(c(MP:BPM), na_if, "Did Not Play")) %>%
mutate(game_id = current_id)  %>%
mutate(loc = "A") %>%
left_join(game_df[c(1,2,4)], by = "game_id") %>%
rename("team" = "visitor_team_name") %>%
rename("player" = "Starters")
a_box[a_box == ""] <- "0"
h_box <- tables[[2]]
names(h_box) <- as.character(h_box[1,])
h_box <- h_box[-1,]
h_box <- h_box %>%
filter(Starters != 'Reserves' & Starters != 'Team Totals') %>%
mutate(across(c(MP:BPM), na_if, "Did Not Play")) %>%
mutate(game_id = current_id) %>%
mutate(loc = "H") %>%
left_join(game_df[c(1,2,6)], by = "game_id") %>%
rename("team" = "home_team_name") %>%
rename("player" = "Starters")
h_box[h_box == ""] <- "0"
full_box <- rbind(a_box, h_box)
full_box <- full_box %>%
select(18,20,19,21,1,2:17)
full_box[, 7:ncol(full_box)] <- lapply(7:ncol(full_box), function(x) as.numeric(full_box[[x]]))
master_df <- rbind(master_df,full_box)
}
master_df <- data.frame()
for (current_id in game_df$game_id) {
print(current_id)
##########
# get box scores
##########
url <- paste0("https://www.basketball-reference.com/boxscores/", current_id,
".html")
webpage <- read_html(url)
tables <- webpage %>% html_nodes("table") %>%
html_table()
tables <- discard(tables, function(z) ncol(z) != 17)
names(tables) <- c("visitor_adv_boxscore","home_adv_boxscore")
a_box <- tables[[1]]
names(a_box) <- as.character(a_box[1,])
a_box <- a_box[-1,]
a_box <- a_box %>%
filter(Starters != 'Reserves' & Starters != 'Team Totals') %>%
mutate(across(c(MP:BPM), na_if, "Did Not Play")) %>%
mutate(game_id = current_id)  %>%
mutate(loc = "A") %>%
left_join(game_df[c(1,2,4)], by = "game_id") %>%
rename("team" = "visitor_team_name") %>%
rename("player" = "Starters")
a_box[a_box == ""] <- "0"
h_box <- tables[[2]]
names(h_box) <- as.character(h_box[1,])
h_box <- h_box[-1,]
h_box <- h_box %>%
filter(Starters != 'Reserves' & Starters != 'Team Totals') %>%
mutate(across(c(MP:BPM), na_if, "Did Not Play")) %>%
mutate(game_id = current_id) %>%
mutate(loc = "H") %>%
left_join(game_df[c(1,2,6)], by = "game_id") %>%
rename("team" = "home_team_name") %>%
rename("player" = "Starters")
h_box[h_box == ""] <- "0"
full_box <- rbind(a_box, h_box)
full_box <- full_box %>%
select(18,20,19,21,1,2:17)
full_box[, 7:ncol(full_box)] <- lapply(7:ncol(full_box), function(x) as.numeric(full_box[[x]]))
master_df <- rbind(master_df,full_box)
}
master_df <- data.frame()
for (current_id in game_df$game_id) {
print(current_id)
##########
# get box scores
##########
url <- paste0("https://www.basketball-reference.com/boxscores/", current_id,
".html")
webpage <- read_html(url)
tables <- webpage %>% html_nodes("table") %>%
html_table()
tables <- discard(tables, function(z) ncol(z) != 17)
names(tables) <- c("visitor_adv_boxscore","home_adv_boxscore")
a_box <- tables[[1]]
names(a_box) <- as.character(a_box[1,])
a_box <- a_box[-1,]
a_box <- a_box %>%
filter(Starters != 'Reserves' & Starters != 'Team Totals') %>%
mutate(across(c(MP:BPM), na_if, "Did Not Play")) %>%
mutate(game_id = current_id)  %>%
mutate(loc = "A") %>%
left_join(game_df[c(1,2,4)], by = "game_id") %>%
rename("team" = "visitor_team_name") %>%
rename("player" = "Starters")
a_box[a_box == ""] <- "0"
h_box <- tables[[2]]
names(h_box) <- as.character(h_box[1,])
h_box <- h_box[-1,]
h_box <- h_box %>%
filter(Starters != 'Reserves' & Starters != 'Team Totals') %>%
mutate(across(c(MP:BPM), na_if, "Did Not Play")) %>%
mutate(game_id = current_id) %>%
mutate(loc = "H") %>%
left_join(game_df[c(1,2,6)], by = "game_id") %>%
rename("team" = "home_team_name") %>%
rename("player" = "Starters")
h_box[h_box == ""] <- "0"
full_box <- rbind(a_box, h_box)
full_box <- full_box %>%
select(18,20,19,21,1,2:17)
full_box[, 7:ncol(full_box)] <- lapply(7:ncol(full_box), function(x) as.numeric(full_box[[x]]))
master_df <- rbind(master_df,full_box)
}
for (current_id in game_df$game_id) {
print(current_id)
##########
# get box scores
##########
url <- paste0("https://www.basketball-reference.com/boxscores/", current_id,
".html")
webpage <- read_html(url)
tables <- webpage %>% html_nodes("table") %>%
html_table()
tables <- discard(tables, function(z) ncol(z) != 17)
names(tables) <- c("visitor_adv_boxscore","home_adv_boxscore")
a_box <- tables[[1]]
names(a_box) <- as.character(a_box[1,])
a_box <- a_box[-1,]
a_box <- a_box %>%
filter(Starters != 'Reserves' & Starters != 'Team Totals') %>%
mutate(across(c(MP:BPM), na_if, "Did Not Play")) %>%
mutate(game_id = current_id)  %>%
mutate(loc = "A") %>%
left_join(game_df[c(1,2,4)], by = "game_id") %>%
rename("team" = "visitor_team_name") %>%
rename("player" = "Starters")
a_box[a_box == ""] <- "0"
h_box <- tables[[2]]
names(h_box) <- as.character(h_box[1,])
h_box <- h_box[-1,]
h_box <- h_box %>%
filter(Starters != 'Reserves' & Starters != 'Team Totals') %>%
mutate(across(c(MP:BPM), na_if, "Did Not Play")) %>%
mutate(game_id = current_id) %>%
mutate(loc = "H") %>%
left_join(game_df[c(1,2,6)], by = "game_id") %>%
rename("team" = "home_team_name") %>%
rename("player" = "Starters")
h_box[h_box == ""] <- "0"
full_box <- rbind(a_box, h_box)
full_box <- full_box %>%
select(18,20,19,21,1,2:17)
full_box[, 7:ncol(full_box)] <- lapply(7:ncol(full_box), function(x) as.numeric(full_box[[x]]))
master_df <- rbind(master_df,full_box)
}
master_df <- data.frame()
for (current_id in game_df$game_id) {
print(current_id)
##########
# get box scores
##########
url <- paste0("https://www.basketball-reference.com/boxscores/", current_id,
".html")
webpage <- read_html(url)
tables <- webpage %>% html_nodes("table") %>%
html_table()
tables <- discard(tables, function(z) ncol(z) != 17)
names(tables) <- c("visitor_adv_boxscore","home_adv_boxscore")
a_box <- tables[[1]]
names(a_box) <- as.character(a_box[1,])
a_box <- a_box[-1,]
a_box <- a_box %>%
filter(Starters != 'Reserves' & Starters != 'Team Totals') %>%
mutate(across(c(MP:BPM), na_if, "Did Not Play")) %>%
mutate(game_id = current_id)  %>%
mutate(loc = "A") %>%
left_join(game_df[c(1,2,4)], by = "game_id") %>%
rename("team" = "visitor_team_name") %>%
rename("player" = "Starters")
a_box[a_box == ""] <- "0"
h_box <- tables[[2]]
names(h_box) <- as.character(h_box[1,])
h_box <- h_box[-1,]
h_box <- h_box %>%
filter(Starters != 'Reserves' & Starters != 'Team Totals') %>%
mutate(across(c(MP:BPM), na_if, "Did Not Play")) %>%
mutate(game_id = current_id) %>%
mutate(loc = "H") %>%
left_join(game_df[c(1,2,6)], by = "game_id") %>%
rename("team" = "home_team_name") %>%
rename("player" = "Starters")
h_box[h_box == ""] <- "0"
full_box <- rbind(a_box, h_box)
full_box <- full_box %>%
select(18,20,19,21,1,2:17)
full_box[, 7:ncol(full_box)] <- lapply(7:ncol(full_box), function(x) as.numeric(full_box[[x]]))
master_df <- rbind(master_df,full_box)
}
master_df <- data.frame()
for (current_id in game_df$game_id) {
print(current_id)
##########
# get box scores
##########
url <- paste0("https://www.basketball-reference.com/boxscores/", current_id,
".html")
webpage <- read_html(url)
tables <- webpage %>% html_nodes("table") %>%
html_table()
tables <- discard(tables, function(z) ncol(z) != 17)
names(tables) <- c("visitor_adv_boxscore","home_adv_boxscore")
a_box <- tables[[1]]
names(a_box) <- as.character(a_box[1,])
a_box <- a_box[-1,]
a_box <- a_box %>%
filter(Starters != 'Reserves' & Starters != 'Team Totals') %>%
mutate(across(c(MP:BPM), na_if, "Did Not Play")) %>%
mutate(game_id = current_id)  %>%
mutate(loc = "A") %>%
left_join(game_df[c(1,2,4)], by = "game_id") %>%
rename("team" = "visitor_team_name") %>%
rename("player" = "Starters")
a_box[a_box == ""] <- "0"
h_box <- tables[[2]]
names(h_box) <- as.character(h_box[1,])
h_box <- h_box[-1,]
h_box <- h_box %>%
filter(Starters != 'Reserves' & Starters != 'Team Totals') %>%
mutate(across(c(MP:BPM), na_if, "Did Not Play")) %>%
mutate(game_id = current_id) %>%
mutate(loc = "H") %>%
left_join(game_df[c(1,2,6)], by = "game_id") %>%
rename("team" = "home_team_name") %>%
rename("player" = "Starters")
h_box[h_box == ""] <- "0"
full_box <- rbind(a_box, h_box)
full_box <- full_box %>%
select(18,20,19,21,1,2:17)
full_box[, 7:ncol(full_box)] <- lapply(7:ncol(full_box), function(x) as.numeric(full_box[[x]]))
master_df <- rbind(master_df,full_box)
}
master_df <- rbind(adv_df, master_df)
saveRDS(master_df, "/Users/Jesse/Documents/MyStuff/NBA Betting/NBAdb/NBA_2023_advanced_box_scores.rds")
library(rvest)
library(lubridate)
setwd("/Users/Jesse/Documents/MyStuff/NBA Betting/NBAdb/")
########
# PARAMETERS
########
year <- "2023"
monthList <- c("october", "november", "december", "january", "february",
"march", "april")
playoff_startDate <- ymd("2023-04-10")
outputfile <- "NBA_2023_game_data.rds"
########
# SCRIPT FOR SCRAPING DATA STARTS HERE
########
df <- data.frame()
for (month in monthList) {
# get webpage
url <- paste0("https://www.basketball-reference.com/leagues/NBA_", year,
"_games-", month, ".html")
webpage <- read_html(url)
# get column names
col_names <- webpage %>%
html_nodes("table#schedule > thead > tr > th") %>%
html_attr("data-stat")
col_names <- c("game_id", col_names)
# extract dates column
# note that in april, there is a break in the table which just says
# "Playoffs". this messes with the data merging later, so we get rid of it
dates <- webpage %>%
html_nodes("table#schedule > tbody > tr > th") %>%
html_text()
dates <- dates[dates != "Playoffs"]
# extract game id
# we need to remove the NA that is due to the "Playoffs" row in april
game_id <- webpage %>%
html_nodes("table#schedule > tbody > tr > th") %>%
html_attr("csk")
game_id <- game_id[!is.na(game_id)]
# extract all columns (except date)
data <- webpage %>%
html_nodes("table#schedule > tbody > tr > td") %>%
html_text() %>%
matrix(ncol = length(col_names) - 2, byrow = TRUE)
# combine game IDs, dates and columns in dataframe for this month, add col names
month_df <- as.data.frame(cbind(game_id, dates, data), stringsAsFactors = FALSE)
names(month_df) <- col_names
# add to overall dataframe
df <- rbind(df, month_df)
}
# change columns to the correct types
df$visitor_pts <- as.numeric(df$visitor_pts)
df$home_pts    <- as.numeric(df$home_pts)
df$attendance  <- as.numeric(gsub(",", "", df$attendance))
df$date_game   <- mdy(df$date_game)
# add column to indicate if regular season or playoff
df$game_type <- with(df, ifelse(date_game >= playoff_startDate,
"Playoff", "Regular"))
# drop boxscore column
df$box_score_text <- NULL
# save to file
saveRDS(df, outputfile)
library(tidyverse)
library(lubridate)
library(rvest)
inputfile <- "/Users/Jesse/Documents/MyStuff/NBA Betting/NBAdb/NBA_2023_game_data.rds"
game_df <- as_tibble(readRDS(inputfile))
View(game_df)
master_df <- data.frame()
for (current_id in game_df$game_id) {
print(current_id)
##########
# get box scores
##########
url <- paste0("https://www.basketball-reference.com/boxscores/", current_id,
".html")
webpage <- read_html(url)
tables <- webpage %>% html_nodes("table") %>%
html_table()
ot <- game_df %>% filter(game_id==current_id)
if (ot$overtimes == "") {
tables <- tables[c(1,9)]
} else if (ot$overtimes == "OT") {
tables <- tables[c(1,10)]
} else if (ot$overtimes == "2OT") {
tables <- tables[c(1,11)]
} else if (ot$overtimes == "3OT") {
tables <- tables[c(1,13)]
} else if (ot$overtimes == "4OT") {
tables <- tables[c(1,14)]
} else if (ot$overtimes == "5OT") {
tables <- tables[c(1,15)]
} else if (ot$overtimes == "6OT") {
tables <- tables[c(1,16)]
}
names(tables) <- c("visitor_boxscore","home_boxscore")
a_box <- tables[[1]]
names(a_box) <- as.character(a_box[1,])
a_box <- a_box[-1,]
a_box <- a_box %>%
filter(Starters != 'Reserves' & Starters != 'Team Totals') %>%
mutate(across(c(MP:`+/-`), na_if, "Did Not Play")) %>%
mutate(game_id = current_id)  %>%
mutate(loc = "A") %>%
left_join(game_df[c(1,2,4)], by = "game_id") %>%
rename("team" = "visitor_team_name") %>%
rename("player" = "Starters")
a_box[a_box == ""] <- "0"
h_box <- tables[[2]]
names(h_box) <- as.character(h_box[1,])
h_box <- h_box[-1,]
h_box <- h_box %>%
filter(Starters != 'Reserves' & Starters != 'Team Totals') %>%
mutate(across(c(MP:`+/-`), na_if, "Did Not Play")) %>%
mutate(game_id = current_id) %>%
mutate(loc = "H") %>%
left_join(game_df[c(1,2,6)], by = "game_id") %>%
rename("team" = "home_team_name") %>%
rename("player" = "Starters")
h_box[h_box == ""] <- "0"
full_box <- rbind(a_box, h_box)
full_box <- full_box %>%
select(22,24,23,25,1,2:21)
full_box[, 7:ncol(full_box)] <- lapply(7:ncol(full_box), function(x) as.numeric(full_box[[x]]))
master_df <- rbind(master_df,full_box)
}
saveRDS(master_df, "/Users/Jesse/Documents/MyStuff/NBA Betting/NBAdb/NBA_2023_basic_box_scores.rds")
